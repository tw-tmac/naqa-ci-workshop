apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'ssh'
apply plugin: 'tomcat'
apply plugin : 'war'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://download.java.net/maven/2"
        }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
       classpath 'org.hidetake:gradle-ssh-plugin:0.3.3'
       classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.8'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework:spring-webmvc:3.2.4.RELEASE'
    compile 'org.springframework:spring-test:3.2.4.RELEASE'
    compile 'org.mockito:mockito-all:1.9.5'
    compile 'javax.servlet:servlet-api:2.5'
    compile 'junit:junit:4.11'
    compile 'org.thymeleaf:thymeleaf-spring3:2.0.17'
    compile 'org.json:json:20131018'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.12'

    def tomcatVersion = '7.0.42'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    compile 'org.slf4j:slf4j-api:1.7.5'
    runtime 'org.slf4j:slf4j-log4j12:1.7.5'
}

remotes {
    web01 {
        host = '10.10.10.50'
        user = 'michael'
         password = 'th0ughtw0rks'
    }
}

task deployWarTo(type: SshTask, dependsOn: 'war') {

    def tomcatHome = '/usr/share/tomcat/webapps'
    def warName = "naqa-ci-workshop"

    session(remotes.web01) {
        println "Uploading new war to $environment"
        put(war.archivePath.absolutePath,"${tomcatHome}/${warName}-${environment}.war")
    }
}

task runFunctionalTests(type: Exec) {
  commandLine 'cucumber', 'functional-tests/features'
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

task runUnitTests(type: Test) {
    include '**/CoursesController*'
    testLogging {
            // Show that tests are run in the command-line output
            events 'failed', 'passed'
        }
}


tomcatRunWar.contextPath = ''
